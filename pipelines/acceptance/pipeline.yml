#@ load("@ytt:data", "data")

#@ load("@ci:notifications.lib.yml", "notify_slack")
#@ load("@ci:resources.lib.yml", "resources")
#@ load("@ci:release_management.lib.yml", "release_management")
#@ load("@ci:clusters.lib.yml", "clusters")
#@ load("@ci:cf_for_k8s.lib.yml", "cf_for_k8s")
#@ load("@ci:common.lib.yml", "git_commit")

groups:
- name: main
  jobs:
  - generate-cf-for-k8s-values
  - deploy-cf-for-k8s-cf4k8s4a8e
  - smoke-tests-cf4k8s4a8e
  - bump-minor-version
  - bump-major-version
  - publish-release

- name: cf-for-k8s-cf4k8s4a8e
  jobs:
  - generate-cf-for-k8s-values
  - deploy-cf-for-k8s-cf4k8s4a8e
  - smoke-tests-cf4k8s4a8e

- name: publish-release
  jobs:
  - bump-minor-version
  - bump-major-version
  - publish-release

- name: clusters
  jobs:
  - delete-cluster-cf4k8s4a8e
  - create-cluster-cf4k8s4a8e
  - generate-domain-certificates

jobs:
- name: publish-release
  on_failure: #@ notify_slack()
  plan:
  - get: ci-resources
  - get: state
    passed:
    - smoke-tests-cf4k8s4a8e
    resource: cluster-state
  - get: eirini-release
    passed:
    - smoke-tests-cf4k8s4a8e
  - get: eirini-release-version
  - task: create-release
    config: #@ release_management.create_release()
  - get: eirini
  - put: eirini-release
    params:
      repository: eirini-release
      tag: eirini-release-version/version
      tag_prefix: v
      only_tag: true
  - put: eirini-github-release
    params:
      globs:
      - release-output/eirini*.tgz
      name: eirini-release-version/version
      tag: eirini-release-version/version
      tag_prefix: v
  - task: checkout-eirini-sha
    privileged: true
    config: #@ release_management.checkout_eirini_sha()
  - put: eirini
    params:
      repository: eirini-stable
      tag: eirini-release-version/version
      only_tag: true

- name: bump-major-version
  on_failure: #@ notify_slack()
  plan:
  - get: eirini-release-version
    params:
      bump: major
  - put: eirini-release-version
    params:
      file: eirini-release-version/version

- name: bump-minor-version
  on_failure: #@ notify_slack()
  plan:
  - get: eirini-release-version
    params:
      bump: minor
    passed:
    - publish-release
    trigger: true
  - put: eirini-release-version
    params:
      file: eirini-release-version/version

- name: deploy-cf-for-k8s-cf4k8s4a8e
  on_failure: #@ notify_slack()
  plan:
  - get: eirini-release
    trigger: true
  - get: cf-for-k8s
    passed:
    - generate-cf-for-k8s-values
    trigger: true
  - get: cluster-state
    passed:
    - generate-cf-for-k8s-values
  - get: ci-resources
  - get: cf-k8s-prometheus
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("cf4k8s4a8e")
  - task: patch-eirini-release
    config: #@ cf_for_k8s.patch_eirini_release()
  - task: deploy-cf-for-k8s
    config: #@ cf_for_k8s.deploy_cf_for_k8s("cf4k8s4a8e")
  public: true
  serial_groups:
  - cf4k8s4a8e

- name: generate-cf-for-k8s-values
  on_failure: #@ notify_slack()
  plan:
  - get: cf-for-k8s
    trigger: true
  - get: cluster-state
  - get: ci-resources
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("cf4k8s4a8e")
  - task: generate-default-values
    config: #@ cf_for_k8s.generate_default_values("cf4k8s4a8e")
  - task: generate-loadbalancer-values
    config: #@ cf_for_k8s.generate_loadbalancer_values("cf4k8s4a8e")
  - task: aggregate-cf4k8s-values
    config: #@ cf_for_k8s.aggregate_cf4k8s_values("cf4k8s4a8e", "cluster-state", "state-modified")
  - task: commit-values
    config: #@ git_commit("state-modified", "state-committed", "update/add cf-for-k8s values files")
  - put: cluster-state
    params:
      merge: true
      repository: state-committed
  public: true
  serial_groups:
  - cf4k8s4a8e

- name: smoke-tests-cf4k8s4a8e
  on_failure: #@ notify_slack()
  plan:
  - get: cf-for-k8s
    params:
      include_source_tarball: true
    passed:
    - deploy-cf-for-k8s-cf4k8s4a8e
    trigger: true
  - get: cluster-state
    passed:
    - deploy-cf-for-k8s-cf4k8s4a8e
  - get: eirini-release
    passed:
    - deploy-cf-for-k8s-cf4k8s4a8e
    trigger: true
  - task: get-smoke-tests-variables
    config: #@ cf_for_k8s.get_smoke_test_variables("cf4k8s4a8e")
  - task: run-smoke-tests
    config: #@ cf_for_k8s.run_smoke_tests()
  public: true
  serial_groups:
  - cf4k8s4a8e

- name: delete-cluster-cf4k8s4a8e
  plan:
  - get: ci-resources
  - task: delete-kubernetes-cluster
    config: #@ clusters.delete_kubernetes_cluster("cf4k8s4a8e")
  - get: cluster-state
  - task: delete-values-file
    config: #@ clusters.delete_values_file("cf4k8s4a8e", "cluster-state", "state-modified")
  - task: commit-values-file-deletion
    config: #@ git_commit("state-modified", "state-committed", "Delete values file for cluster cf4k8s4a8e", "environments/kube-clusters/cf4k8s4a8e")
  - put: cluster-state
    params:
      merge: true
      repository: state-committed
  - task: delete-disks
    config: #@ clusters.delete_disks("cf4k8s4a8e")
  serial: true
  serial_groups:
  - cf4k8s4a8e

- name: create-cluster-cf4k8s4a8e
  plan:
  - get: ci-resources
  - get: cluster-state
    passed:
    - delete-cluster-cf4k8s4a8e
    trigger: true
  - task: create-kubernetes-cluster
    config: #@ clusters.create_kubernetes_cluster("cf4k8s4a8e")
  - put: cluster-cf4k8s4a8e-staging-event-created
    params:
      bump: major
  serial: true
  serial_groups:
  - cf4k8s4a8e

- name: generate-domain-certificates
  plan:
  - get: cluster-state
    passed:
    - create-cluster-cf4k8s4a8e
    trigger: true
  - get: ci-resources
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("cf4k8s4a8e")
  - task: generate-domain-certificates
    config: #@ cf_for_k8s.generate_domain_certificates()


resource_types:
- #@ resources.registry_image_type("slack-notification", "cfcommunity/slack-notification-resource")

resources:
- #@ resources.slack()
- #@ resources.git("cf-for-k8s", "eirini-forks/cf-for-k8s", "develop", data.values.private_keys.eirinici)
- #@ resources.git("cf-k8s-prometheus", "cloudfoundry/cf-k8s-prometheus", "main")
- #@ resources.git("ci-resources", "cloudfoundry/eirini-ci")
- #@ resources.git("cluster-state", "cloudfoundry/eirini-private-config", "master", data.values.private_keys.eirinici)
- #@ resources.git("eirini", "cloudfoundry/eirini", "master", data.values.private_keys.eirinici)
- #@ resources.github_release("eirini-github-release", "cloudfoundry", "eirini-release", None, None, data.values.access_tokens.eirini_ci, True)
- #@ resources.git("eirini-release", "cloudfoundry/eirini-release", "master", data.values.private_keys.eirinici)
- #@ resources.cluster_event_created("cf4k8s4a8e")
- #@ resources.semver("eirini-release-version", "master", "release-version")
