#@ load("@ytt:data", "data")

#@ load("@ci:notifications.lib.yml", "notify_slack")
#@ load("@ci:resources.lib.yml", "resources")
#@ load("@ci:testing.lib.yml", "testing")
#@ load("@ci:clusters.lib.yml", "clusters")
#@ load("@ci:release_management.lib.yml", "release_management")
#@ load("@ci:ci_automation.lib.yml", "ci_automation")

#@ eats_clusters={
#@  "eats-regular": "regular",
#@  "controller-eats-regular": "regular",
#@ }

#@ integration_clusters={
#@  "integration": "regular",
#@  "controller-integration": "regular",
#@ }

#@ ci_clusters = {}
#@ ci_clusters.update(integration_clusters)
#@ ci_clusters.update(eats_clusters)

groups:
- name: main
  jobs:
#@ for cluster in ci_clusters.keys():
  - #@ "delete-cluster-" + cluster
  - #@ "create-cluster-" + cluster
#@ end

jobs:
#@ for cluster, channel in ci_clusters.items():
- name: #@ "delete-cluster-" + cluster
  on_failure: #@ notify_slack()
  plan:
  - get: delete-timer
    trigger: true
  - get: ci-resources
  - task: delete-kubernetes-cluster
    config: #@ clusters.delete_kubernetes_cluster(cluster)
  - task: delete-disks
    config: #@ clusters.delete_disks(cluster)
  - put: #@ "semver-event-" + cluster
    params:
      bump: major
  serial: true
  serial_groups:
  - #@ cluster

- name: #@ "create-cluster-" + cluster
  on_failure: #@ notify_slack()
  plan:
  - get: ci-resources
  - get: #@ "semver-event-" + cluster
    passed:
    - #@ "delete-cluster-" + cluster
    trigger: true
  - task: create-kubernetes-cluster
    config: #@ clusters.create_kubernetes_cluster(cluster, channel.upper())
  serial: true
  serial_groups:
  - #@ cluster
#@ end

resource_types:
- #@ resources.registry_image_type("slack-notification", "cfcommunity/slack-notification-resource")

resources:
- #@ resources.slack()
- #@ resources.git("ci-resources", "cloudfoundry/eirini-ci", branch=data.values.repo_branches.eirini_ci)
#@ for cluster in ci_clusters.keys():
- #@ resources.semver_event(cluster)
#@ end
- name: delete-timer
  source:
    days:
    - Saturday
  type: time
  icon: bomb
