#@ load("@ytt:data", "data")

#@ load("@ci:notifications.lib.yml", "notify_slack")
#@ load("@ci:resources.lib.yml", "resources")
#@ load("@ci:testing.lib.yml", "testing")
#@ load("@ci:clusters.lib.yml", "clusters")
#@ load("@ci:release_management.lib.yml", "release_management")
#@ load("@ci:ci_automation.lib.yml", "ci_automation")
#@ load("@ci:common.lib.yml", "git_commit")

#@ eats_clusters={
#@  "eats-rapid": "rapid",
#@  "eats-regular": "regular",
#@  "eats-stable": "stable",
#@ }

#@ ci_clusters = {}
#@ ci_clusters.update(eats_clusters)
#@ ci_clusters["integration"] = "regular"

groups:
- name: main
  jobs:
  - run-tests
  - run-integration-tests
#@ for component in data.values.components:
  - #@ "create-" + component + "-docker-image"
#@ end
  - update-eirini-version-files
#@ for channel in eats_clusters.values():
  - #@ "deploy-eirini-yamls-" + channel
  - #@ "run-eats-tests-" + channel
#@ end
  - fast-forward-release
- name: bumps
  jobs:
  - bump-go-modules-eirini

jobs:
- name: run-tests
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini
      trigger: true
    - get: eirini-release
    - get: golang-lint
      params:
        skip_download: true
      trigger: true
    - get: ci-resources
  - in_parallel:
    - task: run-unit-tests
      config: #@ testing.run_unit_tests("eirini")
    - task: run-static-checks
      config: #@ testing.run_static_checks("eirini")
  public: true

- name: run-integration-tests
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini
      passed:
      - run-tests
      trigger: true
    - get: eirini-release
    - get: ci-resources
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("integration")
  - task: apply-eirini-crds
    config: #@ testing.apply_eirini_crds("eirini-release")
    params:
      CRDS_PATH: helm/templates/core
  - task: run-integration-tests
    privileged: true
    config: #@ testing.run_integration_tests()
  public: true
  serial: true
  serial_groups:
  - integration

#@ for component in data.values.components:
- name: #@ "create-" + component + "-docker-image"
  on_failure: #@ notify_slack()
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - task: #@ "build-" + component
    privileged: true
    output_mapping:
      image: #@ component + "-image"
    config: #@ release_management.build_docker_image(component)
  - put: #@ component + "-image"
    params:
      image: #@ component + "-image/image.tar"
#@ end

- name: update-eirini-version-files
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini-release
    - get: eirini
      passed:
      #@ for component in data.values.components:
      - #@ "create-" + component + "-docker-image"
      #@ end
      trigger: true
    #@ for component in data.values.components:
    - get: #@ component + "-image"
      params:
        skip_download: false
      passed:
      - #@ "create-" + component + "-docker-image"
    #@ end
  - task: update-version-files
    config: #@ release_management.update_version_files(data.values.components)
  - params:
      repository: eirini-release-updated
    put: eirini-release
  serial: true


#@ for channel in eats_clusters.values():
- name: #@ "deploy-eirini-yamls-" + channel
  on_failure: #@ notify_slack()
  plan:
  - get: eirini-release
    trigger: true
  - get: eirini
    passed:
    - update-eirini-version-files
  - get: ci-resources
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("eats-" + channel)
  - task: cleanup-deployment
    config: #@ testing.cleanup_deployment()
  - task: deploy-eirini-yamls
    config: #@ testing.deploy_eirini_yamls()
  public: true
  serial: true
  serial_groups:
  - #@ channel

- name: #@ "run-eats-tests-" + channel
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini-release
      passed:
      - #@ "deploy-eirini-yamls-" + channel
      trigger: true
    - get: eirini
      passed:
      - #@ "deploy-eirini-yamls-" + channel
      trigger: true
    - get: ci-resources
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("eats-"+channel)
  - task: run-eats-tests
    privileged: true
    config: #@ testing.run_eats_tests()
  public: true
  serial: true
  serial_groups:
  - #@ channel
#@ end


- name: fast-forward-release
  on_failure: #@ notify_slack()
  plan:
  - get: eirini-release
    passed:
#@ for channel in eats_clusters.values():
    - #@ "run-eats-tests-" + channel
#@ end
    trigger: true
  - get: eirini-release-master
  - params:
      repository: eirini-release
    put: eirini-release-master

- name: bump-go-modules-eirini
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: bump-day
      trigger: true
    - get: golang-image
    - get: eirini
  - task: bump-go-modules
    config: #@ ci_automation.bump_go_modules("eirini", "eirini-bumped")
  - in_parallel:
    - task: run-unit-tests
      config: #@ testing.run_unit_tests("eirini-bumped")
    - task: run-static-checks
      config: #@ testing.run_static_checks("eirini-bumped")
  - task: commit-bump
    config: #@ git_commit("eirini-bumped", "eirini-committed", "Bump go packages")
  - put: eirini
    params:
      repository: eirini-committed
  public: true

resource_types:
- #@ resources.registry_image_type("slack-notification", "cfcommunity/slack-notification-resource")

resources:
- #@ resources.slack()
- #@ resources.git("ci-resources", "cloudfoundry-incubator/eirini-ci", branch=data.values.repo_branches.eirini_ci)
- #@ resources.git("eirini", "cloudfoundry-incubator/eirini", branch=data.values.repo_branches.eirini, private_key=data.values.private_keys.eirini)
- #@ resources.git("eirini-release-master", "cloudfoundry-incubator/eirini-release", private_key=data.values.private_keys.eirini_release)
- #@ resources.git("eirini-release", "cloudfoundry-incubator/eirini-release", branch="develop", private_key=data.values.private_keys.eirini_release)
- #@ resources.registry_image("golang-image", "golang")
- #@ resources.registry_image("golang-lint", "golangci/golangci-lint")
- #@ resources.eirini_registry_image("api")
- #@ resources.eirini_registry_image("eirini-controller")
- #@ resources.eirini_registry_image("event-reporter")
- #@ resources.eirini_registry_image("instance-index-env-injector")
- #@ resources.eirini_registry_image("migration")
- #@ resources.eirini_registry_image("resource-validator")
- #@ resources.eirini_registry_image("task-reporter")
- name: bump-day
  source:
    days:
    - Wednesday
  type: time
  icon: timetable
