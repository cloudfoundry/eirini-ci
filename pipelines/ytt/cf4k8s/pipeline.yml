#@ load("@ytt:data", "data")
#@ load("@ci:notifications.lib.yml",
#@   "notify_slack",
#@ )
#@ load("@ci:resources.lib.yml",
#@   "slack",
#@   "registry_image_type",
#@   "git",
#@   "cluster_event_created",
#@ )
#@ load("@ci:tasks.lib.yml",
#@   "delete_kubernetes_cluster",
#@   "delete_values_file",
#@   "delete_disks",
#@   "create_kubernetes_cluster",
#@   "download_kubeconfig",
#@   "generate_default_values",
#@   "delete_cf",
#@   "patch_eirini_release",
#@   "generate_loadbalancer_values",
#@   "aggregate_cf4k8s_values",
#@   "deploy_cf_for_k8s",
#@   "get_smoke_test_variables",
#@   "run_smoke_tests",
#@ )

groups:
- name: all
  jobs:
  - generate-cf-for-k8s-values
  - #@ "deploy-cf-for-k8s-" + data.values.gcp.cluster_name
  - #@ "smoke-tests-" + data.values.gcp.cluster_name
  - #@ "delete-cluster-" + data.values.gcp.cluster_name
  - #@ "create-cluster-" + data.values.gcp.cluster_name
- name: #@ "cf-for-k8s-" + data.values.gcp.cluster_name
  jobs:
  - generate-cf-for-k8s-values
  - #@ "deploy-cf-for-k8s-" + data.values.gcp.cluster_name
  - #@ "smoke-tests-" + data.values.gcp.cluster_name
- name: #@ "cluster-" + data.values.gcp.cluster_name
  jobs:
  - #@ "delete-cluster-" + data.values.gcp.cluster_name
  - #@ "create-cluster-" + data.values.gcp.cluster_name

jobs:
- name: #@ "delete-cluster-" + data.values.gcp.cluster_name
  plan:
  - get: delete-timer
    trigger: true
  - get: ci-resources
  - #@ delete_kubernetes_cluster(data.values.gcp.cluster_name)
  - get: cluster-state
  - #@ delete_values_file(data.values.gcp.cluster_name)
  - #@ delete_disks(data.values.gcp.cluster_name)
  - put: cluster-state
    params:
      merge: true
      repository: state-modified
  serial: true
  serial_groups:
  - #@ data.values.gcp.cluster_name

- name: #@ "create-cluster-" + data.values.gcp.cluster_name
  plan:
  - get: ci-resources
  - get: cluster-state
    passed:
    - #@ "delete-cluster-" + data.values.gcp.cluster_name
    trigger: true
  - #@ create_kubernetes_cluster(data.values.gcp.cluster_name)
  - put: #@ "cluster-" + data.values.gcp.cluster_name + "-staging-event-created"
    params:
      bump: major
  serial: true
  serial_groups:
  - #@ data.values.gcp.cluster_name

- name: generate-cf-for-k8s-values
  on_failure: #@ notify_slack()
  plan:
  - get: cf-for-k8s
    trigger: true
  - get: cluster-state
  - get: ci-resources
  - get: #@ "cluster-" + data.values.gcp.cluster_name + "-staging-event-created"
    passed:
    - #@ "create-cluster-" + data.values.gcp.cluster_name
    trigger: true
  - #@ download_kubeconfig(data.values.gcp.cluster_name)
  - #@ generate_default_values(data.values.gcp.cluster_name)
  - #@ generate_loadbalancer_values(data.values.gcp.cluster_name)
  - #@ aggregate_cf4k8s_values(data.values.gcp.cluster_name)
  - put: cluster-state
    params:
      merge: true
      repository: state-modified
  public: true
  serial_groups:
  - #@ data.values.gcp.cluster_name

- name: #@ "deploy-cf-for-k8s-" + data.values.gcp.cluster_name
  on_failure: #@ notify_slack()
  plan:
  - get: redeploy-timer
    trigger: true
  - get: eirini-release
  - get: cf-for-k8s
    passed:
    - generate-cf-for-k8s-values
    trigger: true
  - get: cluster-state
    passed:
    - generate-cf-for-k8s-values
    trigger: true
  - get: ci-resources
  - get: cf-k8s-prometheus
  - #@ download_kubeconfig(data.values.gcp.cluster_name)
  #@ if/end data.values.enable_cf4k8s_redeploy:
  - #@ delete_cf()
  - #@ patch_eirini_release()
  - #@ deploy_cf_for_k8s(data.values.gcp.cluster_name)
  public: true
  serial_groups:
  - #@ data.values.gcp.cluster_name

- name: #@ "smoke-tests-" + data.values.gcp.cluster_name
  on_failure: #@ notify_slack()
  plan:
  - get: redeploy-timer
    passed:
    - #@ "deploy-cf-for-k8s-" + data.values.gcp.cluster_name
    trigger: true
  - get: cf-for-k8s
    params:
      include_source_tarball: true
    passed:
    - #@ "deploy-cf-for-k8s-" + data.values.gcp.cluster_name
    trigger: true
  - get: cluster-state
    passed:
    - #@ "deploy-cf-for-k8s-" + data.values.gcp.cluster_name
    trigger: true
  - get: eirini-release
    passed:
    - #@ "deploy-cf-for-k8s-" + data.values.gcp.cluster_name
  - #@ get_smoke_test_variables(data.values.gcp.cluster_name)
  - #@ run_smoke_tests()
  public: true
  serial_groups:
  - #@ data.values.gcp.cluster_name

resource_types:
- #@ registry_image_type("slack-notification", "cfcommunity/slack-notification-resource")

resources:
- #@ slack()
- #@ git("cf-for-k8s", "eirini-forks/cf-for-k8s", "develop", data.values.private_keys.eirini_private_config)
- #@ git("cf-k8s-prometheus", "cloudfoundry/cf-k8s-prometheus", "main")
- #@ git("ci-resources", "cloudfoundry-incubator/eirini-ci")
- #@ git("cluster-state", "cloudfoundry/eirini-private-config", "master", data.values.private_keys.eirini_private_config)
- #@ git("eirini-release", "cloudfoundry-incubator/eirini-release")
- #@ cluster_event_created(data.values.gcp.cluster_name)

- icon: bomb
  name: delete-timer
  source:
    days:
    - Saturday
    start: 12:00 AM
    stop: 1:00 AM
  type: time

- icon: bomb
  name: redeploy-timer
  source:
    start: 12:00 AM
    stop: 1:00 AM
  type: time
