#@ load("@ytt:data", "data")

#@ load("@ci:notifications.lib.yml", "notify_slack")
#@ load("@ci:resources.lib.yml", "resources")
#@ load("@ci:testing.lib.yml", "testing")
#@ load("@ci:clusters.lib.yml", "clusters")
#@ load("@ci:release_management.lib.yml", "release_management")
#@ load("@ci:ci_automation.lib.yml", "ci_automation")
#@ load("@ci:common.lib.yml", "git_commit")

#@ eats_clusters={
#@  "controller-eats-regular": "regular",
#@ }

#@ ci_clusters = {}
#@ ci_clusters.update(eats_clusters)
#@ ci_clusters["controller-integration"] = "regular"

groups:
- name: main
  jobs:
  - run-tests
  - run-integration-tests
  - build-and-generate-values
#@ for channel in eats_clusters.values():
  - #@ "deploy-eirini-controller-" + channel
  - #@ "run-eats-tests-" + channel
#@ end
- name: bumps
  jobs:
  - bump-go-modules-eirini-controller
- name: publish-release
  jobs:
  - bump-minor-version
  - bump-major-version
  - publish-release

jobs:
- name: run-tests
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini-controller
      trigger: true
    - get: golang-lint
      params:
        skip_download: true
      trigger: true
    - get: ci-resources
  - in_parallel:
    - task: run-unit-tests
      config: #@ testing.run_unit_tests("eirini-controller")
    - task: run-static-checks
      config: #@ testing.run_static_checks("eirini-controller")
  public: true

- name: run-integration-tests
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini-controller
      passed:
      - run-tests
      trigger: true
    - get: ci-resources
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("integration")
  - task: apply-eirini-crds
    config: #@ testing.apply_eirini_crds()
  - task: run-integration-tests
    privileged: true
    input_mapping:
      eirini: eirini-controller
    config: #@ testing.run_integration_tests()
  public: true
  serial: true
  serial_groups:
  - integration

- name: build-and-generate-values
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini-controller
      passed:
      - run-integration-tests
      trigger: true
    - get: cluster-state
    - get: ci-resources
  - task: get-kubeconfig
    config: #@ clusters.download_kubeconfig("integration")
  - task: build-and-generate-values
    privileged: true
    config: #@ testing.build_eirini_controller()
  - task: commit-values
    config: #@ git_commit("state-modified", "state-committed", "Update eirini-controller values")
  - put: cluster-state
    params:
      repository: state-committed

#@ for channel in eats_clusters.values():
- name: #@ "deploy-eirini-controller-" + channel
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini-controller
      passed:
      - build-and-generate-values
      trigger: true
    - get: cluster-state
      passed:
      - build-and-generate-values
    - get: ci-resources
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("controller-eats-" + channel)
  - task: cleanup-controller-deployment
    config: #@ testing.cleanup_controller_deployment()
  - task: deploy-eirini-controller
    config: #@ testing.deploy_eirini_controller()
#@ end

#@ for channel in eats_clusters.values():
- name: #@ "run-eats-tests-" + channel
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: eirini-controller
      passed:
      - #@ "deploy-eirini-controller-" + channel
      trigger: true
    - get: ci-resources
    - get: cluster-state
      passed:
      - #@ "deploy-eirini-controller-" + channel
  - task: download-kubeconfig
    config: #@ clusters.download_kubeconfig("controller-eats-" + channel)
  - task: run-eats-tests
    privileged: true
    config: #@ testing.run_controller_eats_tests()
  public: true
  serial: true
  serial_groups:
  - #@ channel
#@ end

- name: bump-go-modules-eirini-controller
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: bump-day
      trigger: true
    - get: golang-image
    - get: eirini-controller
  - task: bump-go-modules
    config: #@ ci_automation.bump_go_modules("eirini-controller", "eirini-controller-bumped")
  - in_parallel:
    - task: run-unit-tests
      config: #@ testing.run_unit_tests("eirini-controller-bumped")
    - task: run-static-checks
      config: #@ testing.run_static_checks("eirini-controller-bumped")
  - task: commit-bump
    config: #@ git_commit("eirini-controller-bumped", "eirini-controller-committed", "Bump go packages")
  - put: eirini-controller
    params:
      repository: eirini-controller-committed
  public: true

- name: bump-major-version
  on_failure: #@ notify_slack()
  plan:
  - get: eirini-controller-version
    params:
      bump: major
  - put: eirini-controller-version
    params:
      file: eirini-controller-version/version

- name: bump-minor-version
  on_failure: #@ notify_slack()
  plan:
  - get: eirini-controller-version
    params:
      bump: minor
    passed:
    - publish-release
    trigger: true
  - put: eirini-controller-version
    params:
      file: eirini-controller-version/version

- name: publish-release
  on_failure: #@ notify_slack()
  plan:
  - in_parallel:
    - get: ci-resources
    - get: cluster-state
      passed:
    #@ for channel in eats_clusters.values():
      - #@ "run-eats-tests-" + channel
    #@ end
    - get: eirini-controller
      passed:
    #@ for channel in eats_clusters.values():
      - #@ "run-eats-tests-" + channel
    #@ end
    - get: eirini-controller-version
  - task: create-release
    config: #@ release_management.create_controller_release("cluster-state", "release-output")
  - put: eirini-controller-github-release
    params:
      globs:
      - release-output/eirini-controller*.tgz
      name: eirini-controller-version/version
      tag: eirini-controller-version/version
      tag_prefix: v

resource_types:
- #@ resources.registry_image_type("slack-notification", "cfcommunity/slack-notification-resource")

resources:
- #@ resources.slack()
- #@ resources.git("ci-resources", "cloudfoundry-incubator/eirini-ci", branch=data.values.repo_branches.eirini_ci)
- #@ resources.git("eirini-controller", "cloudfoundry-incubator/eirini-controller", branch=data.values.repo_branches.eirini_controller, private_key=data.values.private_keys.eirinici)
- #@ resources.git("cluster-state", "cloudfoundry/eirini-private-config", private_key=data.values.private_keys.eirinici)
- #@ resources.registry_image("golang-image", "golang")
- #@ resources.registry_image("golang-lint", "golangci/golangci-lint")
- #@ resources.github_release("eirini-controller-github-release", "cloudfoundry-incubator", "eirini-controller", None, None, data.values.access_tokens.eirini_ci, True)
- #@ resources.semver("eirini-controller-version", "master", "eirini-controller/version")

- name: bump-day
  source:
    days:
    - Friday
  type: time
  icon: timetable
