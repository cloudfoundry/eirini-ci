#!/bin/bash

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"

cluster_name="${1:?You must specify a cluster name}"
readonly cluster_name

enable_redeploy="${2:-false}"
readonly enable_redeploy

worker_count=${3:-"3"}
readonly worker_count

target="${4:-eirini}"
readonly target

windows_pool="${5:-false}"
readonly windows_pool

pipeline_yml=$(mktemp)
readonly pipeline_yml
# shellcheck disable=SC2064
trap "rm $pipeline_yml" EXIT

if ! fly -t "$target" status &>/dev/null; then
  fly -t "$target" login
fi

# We want this script to exit with error if pass or gcloud fails rather than
# silently interpolating an empty string into the pipeline vars!
#
# Assigning the subshell stdout to a variable preserves the expected semantics
# of errexit, as these assignments are "simple commands" rather than
# substitutions.
#
# This is a giant gotcha with shell scripts!
# http://pubs.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_09_01

slack_webhook=$(pass eirini/ci/slack-webhook)
dockerhub_password=$(pass eirini/docker-hub)
private_keys_eirini_private_config=$(pass eirini/github/private-config/ssh-key)
gcp_service_account_json=$(pass eirini/gcs-eirini-ci-terraform-json-key)
gcp_dns_service_account_json=$(pass eirini/gcp-ci-dns-admin-json-key)

ytt -f "$SCRIPT_DIR" -f "$SCRIPT_DIR/../shared" \
  --data-value="slack.webhook=$slack_webhook" \
  --data-value="dockerhub.username=eiriniuser" \
  --data-value="dockerhub.password=$dockerhub_password" \
  --data-value="private_keys.eirini_private_config=$private_keys_eirini_private_config" \
  --data-value="gcp.service_account_json=$gcp_service_account_json" \
  --data-value="gcp.dns_service_account_json=$gcp_dns_service_account_json" \
  --data-value="gcp.worker_count=$worker_count" \
  --data-value="gcp.cluster_name=$cluster_name" \
  --data-value="gcp.enable_windows_pool=$windows_pool" \
  --data-value="enable_cf4k8s_redeploy=$enable_redeploy" \
  >"$pipeline_yml"

noColor=
if ! [ -t 1 ]; then
  noColor=--no-color
fi

fly --target "$target" \
  set-pipeline \
  "$noColor" \
  --config "$pipeline_yml" \
  --pipeline "$cluster_name"
