#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")
#@ load("@ytt:struct", "struct")

#@ def _slack():
name: slack
type: slack-notification
icon: slack
source:
  url: #@ data.values.slack.webhook
#@ end

#@ def _image_source(repository, tag="latest"):
source:
  repository: #@ repository
  tag: #@ tag
  username: #@ data.values.dockerhub.username
  password: #@ data.values.dockerhub.password
#@ end

#@ def _docker_image_type(name, repository, tag="latest"):
name: #@ name
type: docker-image
_: #@ template.replace(_image_source(repository, tag))
#@ end

#@ def _registry_image_type(name, repository, tag="latest"):
name: #@ name
type: registry-image
_: #@ template.replace(_image_source(repository, tag))
#@ end

#@ def _registry_image(name, repository, tag="latest"):
_: #@ template.replace(_registry_image_type(name, repository, tag))
icon: docker
#@ end

#@ def _docker_image(name, repository, tag="latest"):
_: #@ template.replace(_docker_image_type(name, repository, tag))
icon: docker
#@ end

#@ def _eirini_registry_image(component_name):
#@     return _registry_image(component_name + "-image", "eirini/" + component_name)
#@ end

#@ def _eirini_docker_image(component_name):
#@     return _docker_image(component_name + "-image", "eirini/" + component_name)
#@ end

#@ def _git(name, path, branch="master", private_key=None):
name: #@ name
type: git
icon: git
source:
  branch: #@ branch
  #@ if private_key:
  uri: #@ "git@github.com:" + path + ".git"
  private_key: #@ private_key
  #@ else:
  uri: #@ "https://github.com/" + path + ".git"
  #@ end
#@ end

#@ def _github_release(name, owner, repo, globs=None, checkEvery=None, accessToken=None, drafts=False):
name: #@ name
type: github-release
source:
  owner: #@ owner
  repository: #@ repo
  #@ if/end globs:
  globs: #@ globs
  #@ if/end accessToken:
  access_token: #@ accessToken
  drafts: #@ drafts
#@ if/end checkEvery:
check_every: #@ checkEvery
icon: egg-easter
#@ end

#@ def _eirini_release_semver():
name: eirini-release-version
type: semver
icon: counter
source:
  branch: master
  driver: git
  file: release-version
  initial_version: 0.1.0
  private_key: #@ data.values.private_keys.eirini_private_config
  uri: "git@github.com:cloudfoundry/eirini-private-config.git"
#@ end

#@ def _eirini_controller_semver():
name: eirini-controller-version
type: semver
icon: counter
source:
  branch: master
  driver: git
  file: eirini-controller-version
  initial_version: 0.1.0
  private_key: #@ data.values.private_keys.eirini_private_config
  uri: "git@github.com:cloudfoundry/eirini-private-config.git"
#@ end

#@ def _cluster_event_created(cluster_name):
name: #@ "cluster-" + cluster_name + "-staging-event-created"
type: semver
icon: check-decagram
source:
  branch: events
  driver: git
  file: #@ cluster_name + "-event-created"
  initial_version: 0.1.0
  private_key: #@ data.values.private_keys.eirini_private_config
  uri: "git@github.com:cloudfoundry/eirini-private-config.git"
#@ end

#@ def _semver_event(name):
name: #@ "semver-event-" + name
type: semver
icon: check-decagram
source:
  branch: events
  driver: git
  file: #@ "semver-event-" + name
  initial_version: 0.1.0
  private_key: #@ data.values.private_keys.eirini_private_config
  uri: "git@github.com:cloudfoundry/eirini-private-config.git"
#@ end

#@ resources = struct.make(
#@   cluster_event_created=_cluster_event_created,
#@   semver_event=_semver_event,
#@   eirini_release_semver=_eirini_release_semver,
#@   eirini_controller_semver=_eirini_controller_semver,
#@   github_release=_github_release,
#@   git=_git,
#@   eirini_docker_image=_eirini_docker_image,
#@   eirini_registry_image=_eirini_registry_image,
#@   docker_image=_docker_image,
#@   registry_image=_registry_image,
#@   registry_image_type=_registry_image_type,
#@   docker_image_type=_docker_image_type,
#@   image_source=_image_source,
#@   slack=_slack,
#@ )
