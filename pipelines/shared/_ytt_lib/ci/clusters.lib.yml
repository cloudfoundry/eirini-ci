#@ load("@ytt:data", "data")
#@ load("@ytt:struct", "struct")
#@ load("common.lib.yml", "image_resource", "task_script")

#@ def _sanitize_cluster_name(cluster_name):
#@   return cluster_name.replace("-", "")
#@ end

#@ def _create_kubernetes_cluster(cluster_name, channel="REGULAR"):
platform: linux
image_resource: #@ image_resource("eirini/gcloud")
inputs:
- name: ci-resources
params:
  CLUSTER_NAME: #@ _sanitize_cluster_name(cluster_name)
  GCP_SERVICE_ACCOUNT_JSON: #@ data.values.gcp.service_account_json
  WINDOWS_POOL: "false"
  WORKER_COUNT: #@ data.values.gcp.worker_count
  RELEASE_CHANNEL: #@ channel
run: #@ task_script("gcp-create-cluster.sh")
#@ end

#@ def _delete_disks(cluster_name):
platform: linux
image_resource: #@ image_resource("eirini/gcloud")
inputs:
- name: ci-resources
params:
  CLUSTER_NAME: #@ _sanitize_cluster_name(cluster_name)
  GCP_SERVICE_ACCOUNT_JSON: #@ data.values.gcp.service_account_json
run: #@ task_script("delete-unused-gcp-disks.sh")
#@ end

#@ def _delete_kubernetes_cluster(cluster_name):
platform: linux
image_resource: #@ image_resource("eirini/gcloud")
inputs:
- name: ci-resources
params:
  CLUSTER_NAME: #@ _sanitize_cluster_name(cluster_name)
  GCP_SERVICE_ACCOUNT_JSON: #@ data.values.gcp.service_account_json
  WORKER_COUNT: #@ data.values.gcp.worker_count
run: #@ task_script("gcp-delete-cluster.sh")
#@ end

#@ def _delete_values_file(cluster_name, state, state_modified):
platform: linux
image_resource: #@ image_resource("eirini/ci")
inputs:
- name: #@ state
outputs:
- name: #@ state_modified
params:
  CLUSTER_STATE: #@ state
  CLUSTER_STATE_MODIFIED: #@ state_modified
  CLUSTER_NAME: #@ _sanitize_cluster_name(cluster_name)
run: #@ task_script("clean-up-cluster-config.sh")
#@ end

#@ def _download_kubeconfig(cluster_name):
platform: linux
image_resource: #@ image_resource("google/cloud-sdk")
inputs:
- name: ci-resources
outputs:
- name: kube
run: #@ task_script("gcp-download-kubeconfig.sh")
params:
  CLUSTER_NAME: #@ _sanitize_cluster_name(cluster_name)
  GCP_REGION: #@ data.values.gcp.region
  GCP_SERVICE_ACCOUNT_JSON: #@ data.values.gcp.service_account_json
  GCP_ZONE: #@ data.values.gcp.zone
#@ end

#@ clusters = struct.make(
#@   create_kubernetes_cluster=_create_kubernetes_cluster,
#@   delete_disks=_delete_disks,
#@   delete_kubernetes_cluster=_delete_kubernetes_cluster,
#@   delete_values_file=_delete_values_file,
#@   download_kubeconfig=_download_kubeconfig,
#@ )
