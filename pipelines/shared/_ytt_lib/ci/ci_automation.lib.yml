#@ load("@ytt:data", "data")
#@ load("@ytt:struct", "struct")
#@ load("common.lib.yml", "image_resource", "task_script")

#@ def _check_wip_branches():
platform: linux
image_resource: #@ image_resource("eirini/ci")
run: #@ task_script("check-wip-branches.sh")
#@ end

#@ def _check_golangci_linters():
platform: linux
inputs:
- name: eirini
image_resource: #@ image_resource("eirini/golangci-lint")
run: #@ task_script("check-golangci-linters.sh")
#@ end

#@ def _bump_go_modules(repository, repository_updated):
platform: linux
caches:
- path: /root/.cache/go-build
image_resource: #@ image_resource("eirini/ci")
inputs:
- name: #@ repository
- name: golang-image
outputs:
- name: #@ repository_updated
params:
  REPO_PATH: #@ repository
  REPO_UPDATED_PATH: #@ repository_updated
run: #@ task_script("bump-go-packages.sh")
#@ end

#@ def _check_pipelines_are_applied():
platform: linux
image_resource: #@ image_resource("cloudfoundry/cf-for-k8s-ci")
inputs:
- name: ci-resources
run: #@ task_script("check-pipelines-are-applied.sh")
params:
  USERNAME: #@ data.values.concourse.username
  PASSWORD: #@ data.values.concourse.password
#@ end

#@ ci_automation = struct.make(
#@   check_wip_branches=_check_wip_branches,
#@   check_golangci_linters=_check_golangci_linters,
#@   bump_go_modules=_bump_go_modules,
#@   check_pipelines_are_applied=_check_pipelines_are_applied,
#@ )
