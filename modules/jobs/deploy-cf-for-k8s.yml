jobs:
- name: (( concat "deploy-cf-for-k8s-" config.cluster.name ))
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini-release
    trigger: true
  - get: cf-for-k8s
    passed:
    - generate-cf-for-k8s-values
    trigger: true
  - get: cluster-state
    passed:
    - generate-cf-for-k8s-values
  - get: ci-resources
  - get: cf-k8s-prometheus
  - task: download-kubeconfig
    params:
      CLUSTER_NAME: (( grab config.cluster.name ))
      GCP_REGION: (( grab config.gcp.region ))
      GCP_SERVICE_ACCOUNT_JSON: (( grab config.gcp.service-account-json ))
      GCP_ZONE: (( grab config.gcp.zone ))
    config:
      image_resource:
        source:
          repository: google/cloud-sdk
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      platform: linux
      inputs:
        - name: ci-resources
      outputs:
        - name: kube
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/gcp-download-kubeconfig.sh" ))
  - config:
      container_limits: {}
      image_resource:
        source:
          repository: cloudfoundry/cf-for-k8s-ci
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      inputs:
      - name: kube
      platform: linux
      params:
          DO_NOT_DELETE_CF: (( grab config.do_not_delete_cf ))
      run:
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/delete-cf-for-k8s.sh" ))
        path: /usr/bin/env
    task: delete-cf
  - config:
      container_limits: {}
      image_resource:
        source:
          repository: cloudfoundry/cf-for-k8s-ci
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      inputs:
      - name: cf-for-k8s
      - name: eirini-release
      outputs:
      - name: patched-cf-for-k8s
      platform: linux
      run:
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/patch-eirini-release-cf-for-k8s.sh" ))
        path: /usr/bin/env
    task: patch-eirini-release
  - config:
      container_limits: {}
      image_resource:
        source:
          repository: cloudfoundry/cf-for-k8s-ci
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      inputs:
      - name: patched-cf-for-k8s
      - name: cf-k8s-prometheus
      - name: cluster-state
      - name: ci-resources
      - name: kube
      params:
        CLUSTER_NAME: (( grab config.cluster.name ))
        USE_CERT_MANAGER: (( grab config.cert-manager.enable ))
      platform: linux
      run:
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/deploy-cf-for-k8s.sh" ))
        path: /usr/bin/env
    task: deploy-cf-for-k8s
  public: true
  serial_groups:
  - (( grab config.cluster.name ))
