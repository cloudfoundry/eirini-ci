jobs:
- name: generate-cf-for-k8s-values
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: cf-for-k8s
    trigger: true
  - get: cluster-state
  - get: ci-resources
  - get: (( concat "cluster-" config.cluster.name "-staging-event-created" ))
    trigger: true
    passed:
    - (( concat "create-cluster-" config.cluster.name ))
  - task: download-kubeconfig
    params:
      CLUSTER_NAME: (( grab config.cluster.name ))
      GCP_REGION: (( grab config.gcp.region ))
      GCP_SERVICE_ACCOUNT_JSON: (( grab config.gcp.service-account-json ))
      GCP_ZONE: (( grab config.gcp.zone ))
    config:
      image_resource:
        source:
          repository: google/cloud-sdk
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      platform: linux
      inputs:
        - name: ci-resources
      outputs:
        - name: kube
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/gcp-download-kubeconfig.sh" ))
  - config:
      container_limits: {}
      image_resource:
        source:
          repository: cloudfoundry/cf-for-k8s-ci
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      inputs:
      - name: cf-for-k8s
      - name: kube
      outputs:
      - name: default-values-file
      platform: linux
      run:
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/generate-default-cf4k8s-values.sh" ))
        path: /usr/bin/env
    params:
      CLUSTER_NAME: (( grab config.cluster.name ))
      GCP_SERVICE_ACCOUNT: (( grab config.gcp.service-account-json ))
    task: generate-default-values
  - config:
      container_limits: {}
      image_resource:
        source:
          repository: eirini/gcloud
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      inputs:
      - name: ci-resources
      outputs:
      - name: loadbalancer-values-file
      platform: linux
      run:
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/generate-loadbalancer-cf4k8s-values.sh" ))
        path: /usr/bin/env
    params:
      CLUSTER_NAME: (( grab config.cluster.name ))
      GCP_REGION: (( grab config.gcp.region ))
      GCP_SERVICE_ACCOUNT_JSON: (( grab config.gcp.service-account-json ))
      GCP_ZONE: (( grab config.gcp.zone ))
    task: generate-loadbalancer-values
  - config:
      container_limits: {}
      image_resource:
        source:
          repository: eirini/ci
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      inputs:
      - name: cluster-state
      - name: default-values-file
      - name: loadbalancer-values-file
      outputs:
      - name: state-modified
      platform: linux
      run:
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/aggregate-cf4k8s-values.sh" ))
        path: /usr/bin/env
    params:
      CLUSTER_NAME: (( grab config.cluster.name ))
    task: aggregate-cf4k8s-values
  - put: cluster-state
    params:
      merge: true
      repository: state-modified
  public: true
  serial_groups:
  - (( grab config.cluster.name ))
