jobs:
- name: create-opi-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-opi
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/opi/Dockerfile
      run:
        path: build
    output_mapping: {image: opi-image}
  - put: opi-image
    params: {image: opi-image/image.tar}

- name: create-route-collector-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-route-collector
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/route-collector/Dockerfile
      run:
        path: build
    output_mapping: {image: route-collector-image}
  - put: route-collector-image
    params: {image: route-collector-image/image.tar}

- name: create-route-pod-informer-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-route-pod-informer
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/route-pod-informer/Dockerfile
      run:
        path: build
    output_mapping: {image: route-pod-informer-image}
  - put: route-pod-informer-image
    params: {image: route-pod-informer-image/image.tar}


- name: create-event-reporter-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-event-reporter
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/event-reporter/Dockerfile
      run:
        path: build
    output_mapping: {image: event-reporter-image}
  - put: event-reporter-image
    params: {image: event-reporter-image/image.tar}

- name: create-task-reporter-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-task-reporter
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/task-reporter/Dockerfile
      run:
        path: build
    output_mapping: {image: task-reporter-image}
  - put: task-reporter-image
    params: {image: task-reporter-image/image.tar}

- name: create-route-statefulset-informer-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-route-statefulset-informer
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/route-statefulset-informer/Dockerfile
      run:
        path: build
    output_mapping: {image: route-statefulset-informer-image}
  - put: route-statefulset-informer-image
    params: {image: route-statefulset-informer-image/image.tar}

- name: create-eirini-controller-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-eirini-controller
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/eirini-controller/Dockerfile
      run:
        path: build
    output_mapping: {image: eirini-controller-image}
  - put: eirini-controller-image
    params: {image: eirini-controller-image/image.tar}

- name: create-instance-index-env-injector-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-instance-index-env-injector
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/instance-index-env-injector/Dockerfile
      run:
        path: build
    output_mapping: {image: instance-index-env-injector-image}
  - put: instance-index-env-injector-image
    params: {image: instance-index-env-injector-image/image.tar}

- name: create-migration-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-migration
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/migration/Dockerfile
      run:
        path: build
    output_mapping: {image: migration-image}
  - put: migration-image
    params: {image: migration-image/image.tar}

- name: create-resource-validator-docker-image
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: eirini
    passed:
    - run-integration-tests
    trigger: true
  - load_var: git-sha
    file: eirini/.git/ref
  - task: build-resource-validator
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: eirini
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: eirini
        BUILD_ARG_GIT_SHA: ((.:git-sha))
        DOCKERFILE: eirini/docker/resource-validator/Dockerfile
      run:
        path: build
    output_mapping: {image: resource-validator-image}
  - put: resource-validator-image
    params: {image: resource-validator-image/image.tar}
